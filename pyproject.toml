[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[project]
name = "sha3bit"
dynamic = ["version"]
authors = [
  { name="Sebastien Riou", email="" },
]
description = "SHA3 with bit granularity for message input length"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
  "pysatl>=1.2.6",
  "bitarray"
]
[project.urls]
"Homepage" = "https://github.com/sebastien-riou/sha3bit"
"Bug Tracker" = "https://github.com/sebastien-riou/sha3bit/issues"


[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "B",
  "C",
  "E",
  "F",
  "FBT",
  "I",
  "N",
  "Q",
  "RUF",
  "S",
  "T",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore McCabe complexity
  "C901",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore class naming convention, we use same as hashlib
  "N801"
]
unfixable = [
  # Don't touch unused imports
  "F401",
]
exclude = ["docs"]

[tool.ruff.isort]
known-first-party = ["sha3bit"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use relative imports and assertions and print
"test/**/*" = ["TID252", "S101", "T201"]
# CLI can print
"sha3bit/cli.py" = ["T201"]

[tool.mypy]
disallow_untyped_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true

[tool.coverage.run]
source_pkgs = ["sha3bit", "test"]
branch = true
parallel = true
omit = []

[tool.coverage.paths]
sha3bit = ["sha3bit", "*/sha3bit/sha3bit"]
test = ["test", "*/sha3bit/test"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
